import mysql.connector
from mysql.connector import Error

# Database credentials
DB_CONFIG = {
    'user': 'root',
    'password': 'my-secret-pw',
    'host': 'localhost',
    'database': 'test_db'
}

# Helper function to execute SQL commands
def execute_query(query, params=None):
    try:
        connection = mysql.connector.connect(**DB_CONFIG)
        cursor = connection.cursor()
        cursor.execute(query, params)
        connection.commit()
        print("Query executed successfully")
    except Error as e:
        print(f"Error: {e}")
    finally:
        if connection.is_connected():
            cursor.close()
            connection.close()

# Create a table with initial data
def create_and_populate_table():
    create_table_query = """
    CREATE TABLE IF NOT EXISTS employees (
        id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(50),
        base_salary DECIMAL(10, 2),
        bonus DECIMAL(10, 2)
    )
    """
    execute_query(create_table_query)

    insert_query = """
    INSERT INTO employees (name, base_salary, bonus)
    VALUES (%s, %s, %s)
    """
    data = [
        ('Alice', 50000.00, 5000.00),
        ('Bob', 60000.00, 6000.00),
        ('Charlie', 55000.00, 5500.00)
    ]
    for item in data:
        execute_query(insert_query, item)

# Query with calculated values
def query_with_calculations():
    try:
        connection = mysql.connector.connect(**DB_CONFIG)
        cursor = connection.cursor(dictionary=True)
        
        query = """
        SELECT
            name,
            base_salary,
            bonus,
            (base_salary + bonus) AS total_compensation,
            (base_salary * 0.1) AS projected_bonus
        FROM employees
        """
        
        cursor.execute(query)
        results = cursor.fetchall()
        
        for row in results:
            print(row)
            
    except Error as e:
        print(f"Error: {e}")
    finally:
        if connection.is_connected():
            cursor.close()
            connection.close()

# Example usage
if __name__ == "__main__":
    print("Creating and populating table...")
    create_and_populate_table()
    
    print("Querying with calculated values...")
    query_with_calculations()
